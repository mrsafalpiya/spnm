/* = 1 - SOLUTION OF NONLINEAR EQUATIONS = */

/* == 1. bisection method == */

const char *correct_bisection_1 = "1\t0\tp\t1\tn\t0.5\tn\n"
				  "2\t0\tp\t0.5\tn\t0.25\tp\n"
				  "3\t0.25\tp\t0.5\tn\t0.375\tn\n"
				  "4\t0.25\tp\t0.375\tn\t0.3125\tp\n"
				  "5\t0.3125\tp\t0.375\tn\t0.3438\tp\n"
				  "6\t0.3438\tp\t0.375\tn\t0.3594\tn\n"
				  "7\t0.3438\tp\t0.3594\tn\t0.3516\tn\n"
				  "8\t0.3438\tp\t0.3516\tn\t0.3477\tn\n"
				  "9\t0.3438\tp\t0.3477\tn\t0.3458\tp\n"
				  "10\t0.3458\tp\t0.3477\tn\t0.3468\tp\n"
				  "11\t0.3468\tp\t0.3477\tn\t0.3472\tp\n"
				  "12\t0.3472\tp\t0.3477\tn\t0.3474\tn\n";

const char *correct_bisection_2 = "1\t0.5\tn\t2\tp\t1.25\tp\n"
				  "2\t0.5\tn\t1.25\tp\t0.875\tn\n"
				  "3\t0.875\tn\t1.25\tp\t1.0625\tn\n"
				  "4\t1.0625\tn\t1.25\tp\t1.15625\tn\n"
				  "5\t1.15625\tn\t1.25\tp\t1.20312\tn\n"
				  "6\t1.20312\tn\t1.25\tp\t1.22656\tn\n"
				  "7\t1.22656\tn\t1.25\tp\t1.23828\tp\n"
				  "8\t1.22656\tn\t1.23828\tp\t1.23242\tn\n"
				  "9\t1.23242\tn\t1.23828\tp\t1.23535\tn\n"
				  "10\t1.23535\tn\t1.23828\tp\t1.23682\tp\n"
				  "11\t1.23535\tn\t1.23682\tp\t1.23608\tn\n"
				  "12\t1.23608\tn\t1.23682\tp\t1.23645\tp\n"
				  "13\t1.23608\tn\t1.23645\tp\t1.23626\tp\n"
				  "14\t1.23608\tn\t1.23626\tp\t1.23617\tn\n"
				  "15\t1.23617\tn\t1.23626\tp\t1.23622\tp\n"
				  "16\t1.23617\tn\t1.23622\tp\t1.2362\tp\n";

const char *correct_bisection_3 = "1\t0\tn\t1\tp\t0.5\tn\n"
				  "2\t0.5\tn\t1\tp\t0.75\tp\n"
				  "3\t0.5\tn\t0.75\tp\t0.625\tp\n"
				  "4\t0.5\tn\t0.625\tp\t0.5625\tn\n"
				  "5\t0.5625\tn\t0.625\tp\t0.5938\tp\n"
				  "6\t0.5625\tn\t0.5938\tp\t0.5782\tp\n"
				  "7\t0.5625\tn\t0.5782\tp\t0.5704\tp\n"
				  "8\t0.5625\tn\t0.5704\tp\t0.5664\tn\n"
				  "9\t0.5664\tn\t0.5704\tp\t0.5684\tp\n"
				  "10\t0.5664\tn\t0.5684\tp\t0.5674\tp\n"
				  "11\t0.5664\tn\t0.5674\tp\t0.5669\tn\n"
				  "12\t0.5669\tn\t0.5674\tp\t0.5672\tp\n"
				  "13\t0.5669\tn\t0.5672\tp\t0.5670\tn\n";

const char *correct_bisection_4 = "1\t1\tn\t2\tp\t1.5\tp\n"
				  "2\t1\tn\t1.5\tp\t1.25\tp\n"
				  "3\t1\tn\t1.25\tp\t1.125\tn\n"
				  "4\t1.125\tn\t1.25\tp\t1.1875\tp\n"
				  "5\t1.125\tn\t1.1875\tp\t1.1562\tp\n"
				  "6\t1.125\tn\t1.1562\tp\t1.1406\tn\n"
				  "7\t1.1406\tn\t1.1562\tp\t1.1484\tp\n"
				  "8\t1.1406\tn\t1.1484\tp\t1.1445\tn\n"
				  "9\t1.1445\tn\t1.1484\tp\t1.1464\tp\n"
				  "10\t1.1445\tn\t1.1464\tp\t1.1454\tn\n"
				  "11\t1.1454\tn\t1.1464\tp\t1.1459\tn\n";

const char *correct_bisection_5 = "1\t0\tp\t1\tn\t0.5\tp\n"
				  "2\t0.5\tp\t1\tn\t0.75\tp\n"
				  "3\t0.75\tp\t1\tn\t0.875\tp\n"
				  "4\t0.875\tp\t1\tn\t0.9375\tn\n"
				  "5\t0.875\tp\t0.9375\tn\t0.90625\tn\n"
				  "6\t0.875\tp\t0.90625\tn\t0.89062\tn\n"
				  "7\t0.875\tp\t0.89062\tn\t0.88281\tp\n"
				  "8\t0.88281\tp\t0.89062\tn\t0.88672\tp\n"
				  "9\t0.88672\tp\t0.89062\tn\t0.88867\tn\n"
				  "10\t0.88672\tp\t0.88867\tn\t0.8877\tp\n"
				  "11\t0.8877\tp\t0.88867\tn\t0.88818\tn\n"
				  "12\t0.8877\tp\t0.88818\tn\t0.88794\tn\n"
				  "13\t0.8877\tp\t0.88794\tn\t0.88782\tp\n"
				  "14\t0.88782\tp\t0.88794\tn\t0.88788\tn\n";

const char *correct_bisection_6 = "1\t1\tn\t2\tp\t1.5\tp\n"
				  "2\t1\tn\t1.5\tp\t1.25\tn\n"
				  "3\t1.25\tn\t1.5\tp\t1.375\tp\n"
				  "4\t1.25\tn\t1.375\tp\t1.3125\tp\n"
				  "5\t1.25\tn\t1.3125\tp\t1.2812\tn\n"
				  "6\t1.2812\tn\t1.3125\tp\t1.2968\tn\n"
				  "7\t1.2968\tn\t1.3125\tp\t1.3046\tp\n"
				  "8\t1.2968\tn\t1.3046\tp\t1.3007\tn\n"
				  "9\t1.3007\tn\t1.3046\tp\t1.3026\tn\n"
				  "10\t1.3026\tn\t1.3046\tp\t1.3036\tp\n"
				  "11\t1.3026\tn\t1.3036\tp\t1.3031\tp\n";

/* == 2. secant method == */

const char *correct_secant_1 =
	"1\t0\t1\t1\t-1\t0.5\t-0.3750\n"
	"2\t1\t-1\t0.5\t-0.3750\t0.2\t0.4080\n"
	"3\t0.5\t-0.3750\t0.2\t0.4080\t0.3563\t-0.0237\n"
	"4\t0.2\t0.4080\t0.3563\t-0.0237\t0.3477\t-0.0011\n"
	"5\t0.3563\t-0.0237\t0.3477\t-0.0011\t0.3473\t-0.0000\n";

const char *correct_secant_2 =
	"1\t0\t-1\t1\t1.123189\t0.47099\t0.265160\n"
	"2\t1\t1.123189\t0.47099\t0.265160\t0.307508\t-0.134823\n"
	"3\t0.47099\t0.265160\t0.307508\t-0.134823\t0.362613\t0.005478\n"
	"4\t0.307508\t-0.134823\t0.362613\t0.005478\t0.360461\t0.000098\n"
	"5\t0.362613\t0.005478\t0.360461\t0.000098\t0.360422\t0.000001\n"
	"6\t0.360461\t0.000098\t0.360422\t0.000001\t0.360422\t0.000001\n";

const char *correct_secant_3 =
	"1\t1\t-4\t2\t3\t1.57143\t-1.36442\n"
	"2\t2\t3\t1.57143\t-1.36442\t1.70541\t-0.24775\n"
	"3\t1.57143\t-1.36442\t1.70541\t-0.24775\t1.73514\t0.0293\n"
	"4\t1.70541\t-0.24775\t1.73514\t0.0293\t1.732\t-0.00048\n"
	"5\t1.73514\t0.0293\t1.732\t-0.00048\t1.73205\t-0.00001\n"
	"6\t1.732\t-0.00048\t1.73205\t-0.00001\t1.73205\t-0.00001\n";

const char *correct_secant_4 =
	"1\t1\t5\t-1\t1\t-1.5\t-7.96875\n"
	"2\t-1\t1\t-1.5\t-7.96875\t-1.05575\t0.51164\n"
	"3\t-1.5\t-7.96875\t-1.05575\t0.51164\t-1.08255\t0.24459\n"
	"4\t-1.05575\t0.51164\t-1.08255\t0.24459\t-1.1071\t-0.02010\n"
	"5\t-1.08255\t0.24459\t-1.1071\t-0.02010\t-1.10524\t0.00065\n"
	"6\t-1.1071\t-0.02010\t-1.10524\t0.00065\t-1.1053\t-0.00002\n"
	"7\t-1.10524\t0.00065\t-1.1053\t-0.00002\t-1.1053\t-0.00002\n";

const char *correct_secant_5 =
	"1\t0\t1\t1\t-0.15853\t0.86316\t0.03358\n"
	"2\t1\t-0.15853\t0.86316\t0.03358\t0.88708\t0.00107\n"
	"3\t0.86316\t0.03358\t0.88708\t0.00107\t0.88787\t-0.00001\n"
	"4\t0.88708\t0.00107\t0.88787\t-0.00001\t0.88786\t0.00000\n";
