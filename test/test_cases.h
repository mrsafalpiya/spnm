/* = 1 - SOLUTION OF NONLINEAR EQUATIONS = */

/* == 1. bisection method == */

const char *correct_bisection_1 = "1\t0\t+\t1\t-\t0.5\t-\n"
				  "2\t0\t+\t0.5\t-\t0.25\t+\n"
				  "3\t0.25\t+\t0.5\t-\t0.375\t-\n"
				  "4\t0.25\t+\t0.375\t-\t0.3125\t+\n"
				  "5\t0.3125\t+\t0.375\t-\t0.3438\t+\n"
				  "6\t0.3438\t+\t0.375\t-\t0.3594\t-\n"
				  "7\t0.3438\t+\t0.3594\t-\t0.3516\t-\n"
				  "8\t0.3438\t+\t0.3516\t-\t0.3477\t-\n"
				  "9\t0.3438\t+\t0.3477\t-\t0.3458\t+\n"
				  "10\t0.3458\t+\t0.3477\t-\t0.3468\t+\n"
				  "11\t0.3468\t+\t0.3477\t-\t0.3472\t+\n"
				  "12\t0.3472\t+\t0.3477\t-\t0.3474\t-\n";

const char *correct_bisection_2 = "1\t0.5\t-\t2\t+\t1.25\t+\n"
				  "2\t0.5\t-\t1.25\t+\t0.875\t-\n"
				  "3\t0.875\t-\t1.25\t+\t1.0625\t-\n"
				  "4\t1.0625\t-\t1.25\t+\t1.15625\t-\n"
				  "5\t1.15625\t-\t1.25\t+\t1.20312\t-\n"
				  "6\t1.20312\t-\t1.25\t+\t1.22656\t-\n"
				  "7\t1.22656\t-\t1.25\t+\t1.23828\t+\n"
				  "8\t1.22656\t-\t1.23828\t+\t1.23242\t-\n"
				  "9\t1.23242\t-\t1.23828\t+\t1.23535\t-\n"
				  "10\t1.23535\t-\t1.23828\t+\t1.23682\t+\n"
				  "11\t1.23535\t-\t1.23682\t+\t1.23608\t-\n"
				  "12\t1.23608\t-\t1.23682\t+\t1.23645\t+\n"
				  "13\t1.23608\t-\t1.23645\t+\t1.23626\t+\n"
				  "14\t1.23608\t-\t1.23626\t+\t1.23617\t-\n"
				  "15\t1.23617\t-\t1.23626\t+\t1.23622\t+\n"
				  "16\t1.23617\t-\t1.23622\t+\t1.2362\t+\n";

const char *correct_bisection_3 = "1\t0\t-\t1\t+\t0.5\t-\n"
				  "2\t0.5\t-\t1\t+\t0.75\t+\n"
				  "3\t0.5\t-\t0.75\t+\t0.625\t+\n"
				  "4\t0.5\t-\t0.625\t+\t0.5625\t-\n"
				  "5\t0.5625\t-\t0.625\t+\t0.5938\t+\n"
				  "6\t0.5625\t-\t0.5938\t+\t0.5782\t+\n"
				  "7\t0.5625\t-\t0.5782\t+\t0.5704\t+\n"
				  "8\t0.5625\t-\t0.5704\t+\t0.5664\t-\n"
				  "9\t0.5664\t-\t0.5704\t+\t0.5684\t+\n"
				  "10\t0.5664\t-\t0.5684\t+\t0.5674\t+\n"
				  "11\t0.5664\t-\t0.5674\t+\t0.5669\t-\n"
				  "12\t0.5669\t-\t0.5674\t+\t0.5672\t+\n"
				  "13\t0.5669\t-\t0.5672\t+\t0.5670\t-\n";

const char *correct_bisection_4 = "1\t1\t-\t2\t+\t1.5\t+\n"
				  "2\t1\t-\t1.5\t+\t1.25\t+\n"
				  "3\t1\t-\t1.25\t+\t1.125\t-\n"
				  "4\t1.125\t-\t1.25\t+\t1.1875\t+\n"
				  "5\t1.125\t-\t1.1875\t+\t1.1562\t+\n"
				  "6\t1.125\t-\t1.1562\t+\t1.1406\t-\n"
				  "7\t1.1406\t-\t1.1562\t+\t1.1484\t+\n"
				  "8\t1.1406\t-\t1.1484\t+\t1.1445\t-\n"
				  "9\t1.1445\t-\t1.1484\t+\t1.1464\t+\n"
				  "10\t1.1445\t-\t1.1464\t+\t1.1454\t-\n"
				  "11\t1.1454\t-\t1.1464\t+\t1.1459\t-\n";

const char *correct_bisection_5 = "1\t0\t+\t1\t-\t0.5\t+\n"
				  "2\t0.5\t+\t1\t-\t0.75\t+\n"
				  "3\t0.75\t+\t1\t-\t0.875\t+\n"
				  "4\t0.875\t+\t1\t-\t0.9375\t-\n"
				  "5\t0.875\t+\t0.9375\t-\t0.90625\t-\n"
				  "6\t0.875\t+\t0.90625\t-\t0.89062\t-\n"
				  "7\t0.875\t+\t0.89062\t-\t0.88281\t+\n"
				  "8\t0.88281\t+\t0.89062\t-\t0.88672\t+\n"
				  "9\t0.88672\t+\t0.89062\t-\t0.88867\t-\n"
				  "10\t0.88672\t+\t0.88867\t-\t0.8877\t+\n"
				  "11\t0.8877\t+\t0.88867\t-\t0.88818\t-\n"
				  "12\t0.8877\t+\t0.88818\t-\t0.88794\t-\n"
				  "13\t0.8877\t+\t0.88794\t-\t0.88782\t+\n"
				  "14\t0.88782\t+\t0.88794\t-\t0.88788\t-\n";

const char *correct_bisection_6 = "1\t1\t-\t2\t+\t1.5\t+\n"
				  "2\t1\t-\t1.5\t+\t1.25\t-\n"
				  "3\t1.25\t-\t1.5\t+\t1.375\t+\n"
				  "4\t1.25\t-\t1.375\t+\t1.3125\t+\n"
				  "5\t1.25\t-\t1.3125\t+\t1.2812\t-\n"
				  "6\t1.2812\t-\t1.3125\t+\t1.2968\t-\n"
				  "7\t1.2968\t-\t1.3125\t+\t1.3046\t+\n"
				  "8\t1.2968\t-\t1.3046\t+\t1.3007\t-\n"
				  "9\t1.3007\t-\t1.3046\t+\t1.3026\t-\n"
				  "10\t1.3026\t-\t1.3046\t+\t1.3036\t+\n"
				  "11\t1.3026\t-\t1.3036\t+\t1.3031\t+\n";

/* == 2. secant method == */

const char *correct_secant_1 =
	"1\t0\t1\t1\t-1\t0.5\t-0.3750\n"
	"2\t1\t-1\t0.5\t-0.3750\t0.2\t0.4080\n"
	"3\t0.5\t-0.3750\t0.2\t0.4080\t0.3563\t-0.0237\n"
	"4\t0.2\t0.4080\t0.3563\t-0.0237\t0.3477\t-0.0011\n"
	"5\t0.3563\t-0.0237\t0.3477\t-0.0011\t0.3473\t-0.0000\n";

const char *correct_secant_2 =
	"1\t0\t-1\t1\t1.123189\t0.47099\t0.265160\n"
	"2\t1\t1.123189\t0.47099\t0.265160\t0.307508\t-0.134823\n"
	"3\t0.47099\t0.265160\t0.307508\t-0.134823\t0.362613\t0.005478\n"
	"4\t0.307508\t-0.134823\t0.362613\t0.005478\t0.360461\t0.000098\n"
	"5\t0.362613\t0.005478\t0.360461\t0.000098\t0.360422\t0.000001\n"
	"6\t0.360461\t0.000098\t0.360422\t0.000001\t0.360422\t0.000001\n";

const char *correct_secant_3 =
	"1\t1\t-4\t2\t3\t1.57143\t-1.36442\n"
	"2\t2\t3\t1.57143\t-1.36442\t1.70541\t-0.24775\n"
	"3\t1.57143\t-1.36442\t1.70541\t-0.24775\t1.73514\t0.0293\n"
	"4\t1.70541\t-0.24775\t1.73514\t0.0293\t1.732\t-0.00048\n"
	"5\t1.73514\t0.0293\t1.732\t-0.00048\t1.73205\t-0.00001\n"
	"6\t1.732\t-0.00048\t1.73205\t-0.00001\t1.73205\t-0.00001\n";

const char *correct_secant_4 =
	"1\t1\t5\t-1\t1\t-1.5\t-7.96875\n"
	"2\t-1\t1\t-1.5\t-7.96875\t-1.05575\t0.51164\n"
	"3\t-1.5\t-7.96875\t-1.05575\t0.51164\t-1.08255\t0.24459\n"
	"4\t-1.05575\t0.51164\t-1.08255\t0.24459\t-1.1071\t-0.02010\n"
	"5\t-1.08255\t0.24459\t-1.1071\t-0.02010\t-1.10524\t0.00065\n"
	"6\t-1.1071\t-0.02010\t-1.10524\t0.00065\t-1.1053\t-0.00002\n"
	"7\t-1.10524\t0.00065\t-1.1053\t-0.00002\t-1.1053\t-0.00002\n";

const char *correct_secant_5 =
	"1\t0\t1\t1\t-0.15853\t0.86316\t0.03358\n"
	"2\t1\t-0.15853\t0.86316\t0.03358\t0.88708\t0.00107\n"
	"3\t0.86316\t0.03358\t0.88708\t0.00107\t0.88787\t-0.00001\n"
	"4\t0.88708\t0.00107\t0.88787\t-0.00001\t0.88786\t0.00000\n";
